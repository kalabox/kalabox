#!/bin/sh
set -e

### BEGIN INIT INFO
# Provides:           kalabox
# Required-Start:     $syslog $remote_fs
# Required-Stop:      $syslog $remote_fs
# Should-Start:       cgroupfs-mount cgroup-lite
# Should-Stop:        cgroupfs-mount cgroup-lite
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  Alternate Docker Daemon for Kalabox
# Description:
#  Fast dev
### END INIT INFO

export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin

# Some helphers
BASE=kalabox
KALABOX_DESC="Kalabox"
KALABOX_LOGFILE=/var/log/$BASE.log

# Start up script
KALABOX=/usr/share/kalabox/scripts/daemonup

# This is the pid file managed by docker itself
KALABOX_PIDFILE=/usr/share/kalabox/$BASE.pid
# This is the pid file created/managed by start-stop-daemon
KALABOX_SSD_PIDFILE=/usr/share/kalabox/$BASE-ssd.pid

# User
KALABOX_USER=$(echo $(getent group sudo || getent group wheel) | awk -F':' {' print $1 '})

# Get lsb functions
. /lib/lsb/init-functions

if [ -f /etc/default/$BASE ]; then
  . /etc/default/$BASE
fi

check_init() {
   # see also init_is_upstart in /lib/lsb/init-functions (which isn't available in Ubuntu 12.04, or we'd use it directly)
   if [ -x /sbin/initctl ] && /sbin/initctl version 2>/dev/null | grep -q upstart; then
                log_failure_msg "$KALABOX_DESC is managed via upstart, try using service $BASE $1"
                exit 1
         fi
}

fail_unless_root() {
  if [ "$(id -u)" != '0' ]; then
    log_failure_msg "$KALABOX_DESC must be run as root"
    exit 1
  fi
}

cgroupfs_mount() {
  # see also https://github.com/tianon/cgroupfs-mount/blob/master/cgroupfs-mount
  if grep -v '^#' /etc/fstab | grep -q cgroup \
    || [ ! -e /proc/cgroups ] \
    || [ ! -d /sys/fs/cgroup ]; then
    return
  fi
  if ! mountpoint -q /sys/fs/cgroup; then
    mount -t tmpfs -o uid=0,gid=0,mode=0755 cgroup /sys/fs/cgroup
  fi
  (
    cd /sys/fs/cgroup
    for sys in $(awk '!/^#/ { if ($4 == 1) print $1 }' /proc/cgroups); do
      mkdir -p $sys
      if ! mountpoint -q $sys; then
        if ! mount -n -t cgroup -o $sys cgroup $sys; then
          rmdir $sys || true
        fi
      fi
    done
  )
}

case "$1" in
  start)
    check_init

    fail_unless_root

    cgroupfs_mount

    /usr/share/kalabox/scripts/bridgeup

    touch "$KALABOX_LOGFILE"
    chgrp "$KALABOX_USER" "$KALABOX_LOGFILE"

    ulimit -n 1048576
    if [ "$BASH" ]; then
      ulimit -u 1048576
    else
      ulimit -p 1048576
    fi

    log_begin_msg "Starting $KALABOX_DESC: $BASE"
    start-stop-daemon --start --background \
      --no-close \
      --exec "$KALABOX" \
      --pidfile "$KALABOX_SSD_PIDFILE" \
      --make-pidfile \
      >> "$KALABOX_LOGFILE" 2>&1
    log_end_msg $?
    ;;

  stop)
    check_init
    fail_unless_root
    log_begin_msg "Stopping $KALABOX_DESC: $BASE"
    start-stop-daemon --stop --pidfile "$KALABOX_SSD_PIDFILE" --retry 10
    log_end_msg $?
    ;;

  restart)
    check_init
    fail_unless_root
    kalabox_pid=`cat "$KALABOX_SSD_PIDFILE" 2>/dev/null`
    [ -n "$kalabox_pid" ] \
      && ps -p $kalabox_pid > /dev/null 2>&1 \
      && $0 stop
    $0 start
    ;;

  force-reload)
    check_init
    fail_unless_root
    $0 restart
    ;;

  status)
    check_init
    status_of_proc -p "$KALABOX_SSD_PIDFILE" "$KALABOX" "$KALABOX_DESC"
    ;;

  *)
    echo "Usage: service kalabox {start|stop|restart|status}"
    exit 1
    ;;
esac
